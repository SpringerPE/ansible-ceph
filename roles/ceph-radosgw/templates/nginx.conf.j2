# {{ ansible_managed }}

server {
        listen 80;

        server_name *.{{ ansible_hostname }} {{ ansible_hostname }};
        client_max_body_size 10g;

        {% if radosgw_server is defined and radosgw_server == 'tengine' %} 
        # This is the important option that tengine has, but nginx does not
        fastcgi_request_buffering off;
        {% endif %}

        access_log /var/log/access-radosgw.log;
        error_log /var/log/error-radosgw.log;

        location / {
                fastcgi_pass_header Authorization;
                fastcgi_pass_request_headers on;

                if ($request_method  = PUT ) {
                  rewrite ^ /PUT$request_uri;
                }
                include fastcgi_params;
                fastcgi_keep_conn on;
                fastcgi_pass unix:{{ radosgw_socket }};
        }

        location /PUT/ {
                internal;
                fastcgi_pass_header Authorization;
                fastcgi_pass_request_headers on;

                include fastcgi_params;
                fastcgi_param CONTENT_LENGTH $content_length;

                fastcgi_pass unix:{{ radosgw_socket }};
        }
}



# HTTPS server
#
#server {
#	listen 443;
#	server_name localhost;
#
#	root html;
#	index index.html index.htm;
#
#	ssl on;
#	ssl_certificate cert.pem;
#	ssl_certificate_key cert.key;
#
#	ssl_session_timeout 5m;
#
#	ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
#	ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
#	ssl_prefer_server_ciphers on;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}

